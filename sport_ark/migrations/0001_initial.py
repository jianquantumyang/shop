# Generated by Django 4.1.5 on 2023-04-14 11:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('regis_data', models.DateField(auto_now=True, verbose_name='Дата создания')),
                ('face', models.ImageField(upload_to='avatars/%Y/%m/%d/', verbose_name='Аватар')),
                ('about', models.TextField(verbose_name='О себе')),
                ('country', models.CharField(max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_img', models.ImageField(upload_to='category/img/%Y/%m/%d/')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Товар')),
                ('about', models.TextField(verbose_name='О товаре')),
                ('rating', models.IntegerField(blank=True, default=0, null=True, verbose_name='Рейтинг')),
                ('gender', models.CharField(choices=[('Мужчина', 'Мужчина'), ('Женщина', 'Женщина'), ('Всем', 'Всем')], max_length=20, verbose_name='Пол')),
                ('img1', models.ImageField(upload_to='product/1/%m/%d/', verbose_name='Картинка для товара 1')),
                ('img2', models.ImageField(blank=True, null=True, upload_to='product/2/%m/%d/', verbose_name='Картинка для товара 2')),
                ('img3', models.ImageField(blank=True, null=True, upload_to='product/3/%m/%d/', verbose_name='Картинка для товара 3')),
                ('img4', models.ImageField(blank=True, null=True, upload_to='product/4/%m/%d/', verbose_name='Картинка для товара 4')),
                ('img5', models.ImageField(blank=True, null=True, upload_to='product/5/%m/%d/', verbose_name='Картинка для товара 5')),
                ('are_available', models.BooleanField(verbose_name='Есть в наличии?')),
                ('price', models.IntegerField(verbose_name='Цена в ₸')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Продавец')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sport_ark.category', verbose_name='Категория продукта')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='RatingProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Комментарий к товару')),
                ('rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=0, null=True, verbose_name='Оценка товару')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport_ark.product')),
            ],
            options={
                'verbose_name': 'Рейтинг продукта',
                'verbose_name_plural': 'Рейтинг продуктов',
            },
        ),
        migrations.CreateModel(
            name='Pod_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Под Категория')),
                ('category_roditel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport_ark.category')),
            ],
            options={
                'verbose_name': 'Под Категория',
                'verbose_name_plural': 'Под Категории',
            },
        ),
    ]
